Bootstrap: docker
From: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04

%environment

	#Environment variables

	#Use bash as default shell
	SHELL=/bin/bash

	#Add nvidia driver paths
	PATH="/nvbin:$PATH"
	LD_LIBRARY_PATH="/nvlib;$LD_LIBRARY_PATH"

	#Add CUDA paths
	CPATH="/usr/local/cuda/include:$CPATH"
	PATH="/usr/local/cuda/bin:$PATH"
	LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"
	CUDA_HOME="/usr/local/cuda"
	
	export PATH LD_LIBRARY_PATH CPATH CUDA_HOME


%setup
	#Runs on host
	#The path to the image is $SINGULARITY_ROOTFS
	cp -R /vagrant/heart/new_heart ${SINGULARITY_ROOTFS}


%post
	#Post setup script

	#Load environment variables
	. /environment

	#Default mount paths
	mkdir /scratch /data /shared /fastdata

	#Nvidia Library mount paths
	mkdir /nvlib /nvbin

  	#Update and get required packages
  	apt-get update
 	apt-get install -y python3
  	apt-get install -y wget git vim

	#install python3 in python virtualenv
  	apt update
  	apt install -y virtualenv
  	virtualenv -p python3 env
  	ls env/lib
  	ls -l `which sh`
  	. env/bin/activate

	#Install pip
  	apt install -y python3-pip
  	python --version
  	pip3 --version  
	
  	#Install Tensorflow  	
  	pip3 install --no-cache-dir tensorflow-gpu==1.12.0

	#Install PyTorch
	pip3 install torch torchvision

  	# Upgrade all packages to their latest versions
  	apt-get -y update && apt-get -y upgrade

  	# Install expect to automate responses for interactive build questions
  	apt-get -y install expect  	 
  	apt update
  	apt-get clean
	apt update && apt install -y libsm6 libxext6
  	apt-get install -y libxrender-dev 
	apt-get install -y libgtk2.0-dev
	apt-get install -y python3-tk
	apt-get install -y python-imaging
  	
	#Install other dependencies
	pip3 install Pillow 
  	pip3 install numpy
  	pip3 install scikit-image
  	pip3 install opencv-python
  	pip3 install protobuf
  	pip3 install matplotlib
  	pip3 install tensorboardX
  	pip3 install tqdm
  	pip3 install h5py
	pip3 install torch 
	pip3 install pydicom
	pip3 install keras==2.0.8	
	
	#Get necessary files from git 	
  	mkdir /software
  	cd /software
  	git clone https://github.com/cerr/CERR.git
  	wget https://github.com/cerr/aimodels/raw/master/PROSTATE_DEEPLABV3_1.0.pb
  	cp -r /heart /software
	wget 	https://raw.githubusercontent.com/cerr/aimodels/master/model_5l_lung-frrn_incremental_up_res_all_tf_drop_weight_residual_512.json
	wget https://github.com/cerr/aimodels/raw/master/weights.15--0.71.hdf5


##############################
# MR_Prostate_DeepLab
##############################

%apprun MR_Prostate_DeepLab
    exec echo "MR_Prostate_DeepLab"
    
    . /env/bin/activate
    python /software/CERR/CERR_core/Contouring/models/mr_prostate_DeepLab/run_inference_clinical_3D.py arg1=$1 arg2=$2
    pkill -f /software/CERR/CERR_core/Contouring/models/mr_prostate_DeepLab/run_inference_clinical_3D.py


##############################
# incrMRRN
##############################

%apprun incrMRRN
    exec echo "incrMRRN"
    
    . /env/bin/activate
    python /software/CERR/CERR_core/Contouring/models/incrMRRN/run_incMRRN.py arg1=$1 arg2=$2
    pkill -f /software/CERR/CERR_core/Contouring/models/incrMRRN/run_incMRRN.py



##############################
# Heart
##############################

%apprun Heart
    exec echo "Heart"
    
    . /env/bin/activate
    python /software/new_heart/run_seg_heart.py	
    pkill -f software/heart/run_seg_heart.py
    

%runscript
	#Executes with the singularity run command	
	
	. /env/bin/activate	
	
	

%test
	#Test that script is a success

	#Load environment variables
	#. /environment

	#Test tensorflow install
	#python -c "import tensorflow"
